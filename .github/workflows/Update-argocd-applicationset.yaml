name: Update-argocd-applicationset

on:
  workflow_call:
    inputs:
      values_files_paths:
        required: true
        type: string

env:
  aws_region:  us-east-1

permissions:
  contents: read

jobs:
  create-branch-and-update-application-set-in-argocd:
    runs-on: ubuntu-latest
    steps:
      - name: List environment variables 
        run: env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.aws_region }}

      - name: Checkout argocd
        uses: actions/checkout@v3
        with:
          repository: brightsource-il/argocd
          token: ${{ secrets.REPO_ACCESS_ARGOCD }}

      - name: create branch in argocd repo
        run: |
          echo "replace all slashes in branch name"
          if [ -z "$GITHUB_HEAD_REF" ]; then
            echo "We are NOT IN a pull request"
            branch_with_slashes=${{ github.ref_name }}
            branch_without_slashes=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          else
            echo "We are IN a pull request"
            branch_with_slashes=${{ github.head_ref }}
            branch_without_slashes=$(echo "${{ github.head_ref }}" | sed 's/\//-/g')
          fi
          echo "branch_without_slashes: $branch_without_slashes"
          echo "branch_with_slashes: $branch_with_slashes"

          git config --global user.email argocd@brightsource-il.com && git config --global user.name ci-bot
          git fetch
          git branch -a
          ls
          pwd

          git checkout $branch_without_slashes 2>/dev/null || git checkout -b $branch_without_slashes

          short_sha=$(git rev-parse --short "$GITHUB_SHA")
          echo "short sha: $short_sha"

          echo "updating and replace place holders in branch-generator-template.yaml"
          sed -i "s,{branch},$branch_without_slashes," ./applicationSets/branch-generator-template.yaml
          sed -i "s,{repo},${{ github.event.repository.name }}," ./applicationSets/branch-generator-template.yaml
          sed -i "s,environment:.*,environment:\ $branch_without_slashes," helm/umbrella/common.yaml

          echo "update image tag in values files"
          IFS=';' read -ra values_files_array <<< "${{ inputs.values_files_paths }}"
          for values_file_path in ${values_files_array[@]}; do
            echo "values_file_path: $values_file_path"
            sed -i "s,tag:.*,tag:\ $branch_without_slashes-$short_sha," $values_file_path
          done

          # if namespace exists rollout all pods
          if kubectl get namespace ${{ github.event.repository.name }}-$branch_without_slashes &> /dev/null; 
          then 
            kubectl rollout restart deploy -n ${{ github.event.repository.name }}-$branch_without_slashes; 
          fi

          aws eks --region ${{ env.aws_region }} update-kubeconfig --name eks-dev-${{ env.aws_region }}
          kubectl apply -f ./applicationSets/branch-generator-template.yaml

          git add -A 
          git diff-index --quiet HEAD || git commit -m "Updated from ${{ github.event.repository.name }} - $branch_with_slashes"
          git push --set-upstream origin $branch_with_slashes