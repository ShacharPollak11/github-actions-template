name: Update-argocd-applicationset

on:
  workflow_call:
    inputs:
      values_files_paths:
        required: true
        type: string

env:
  aws_region:  us-east-1

permissions:
  contents: read

jobs:
  create-branch-and-update-application-set-in-argocd:
    runs-on: ubuntu-latest
    steps:
      - name: List environment variables 
        run: env

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.aws_region }}

      - name: Checkout argocd
        uses: actions/checkout@v3
        with:
          repository: brightsource-il/argocd
          token: ${{ secrets.REPO_ACCESS_ARGOCD }}
          ref: dev

      - name: Create and update branch in argocd repo
        run: |
          echo "replace all slashes in branch name"
          if [ -z "$GITHUB_HEAD_REF" ] || [ "${{ github.event.pull_request.merged }}" == "true"  ] ; then
            echo "We are NOT IN a pull request or we are in pull-request-merged"
            branch_with_slashes=${{ github.ref_name }}
            branch_without_slashes=$(echo "${{ github.ref_name }}" | sed 's/\//-/g')
          else
            echo "We are IN a pull request"
            branch_with_slashes=${{ github.head_ref }}
            branch_without_slashes=$(echo "${{ github.head_ref }}" | sed 's/\//-/g')
          fi
          echo "branch_without_slashes: $branch_without_slashes"
          echo "branch_with_slashes: $branch_with_slashes"

          if [ "${{ github.event.pull_request.merged }}" != "true"  ] ; then
            argocd_branch_name=${{ github.event.repository.name }}-$branch_without_slashes
          else
            argocd_branch_name=$branch_without_slashes
          fi

          git config --global user.email argocd@brightsource-il.com && git config --global user.name ci-bot
          git fetch
          
          # for debugging:
          git branch -a
          ls
          pwd

          # The left side check if branch exists, and if not using the right side and create the branch
          git checkout $argocd_branch_name 2>/dev/null || git checkout -b $argocd_branch_name

          if [ "${{ github.event.pull_request.merged }}" != "true" ]; then
            echo "updating and replace place holders in branch-generator-template.yaml"
            sed -i "s,{branch},$branch_without_slashes," ./applicationSets/branch-generator-template.yaml
            sed -i "s,{repo},${{ github.event.repository.name }}," ./applicationSets/branch-generator-template.yaml
            sed -i "s,environment:.*,environment:\ $branch_without_slashes," helm/umbrella/common.yaml
            aws eks --region ${{ env.aws_region }} update-kubeconfig --name eks-dev-${{ env.aws_region }}
            kubectl apply -f ./applicationSets/branch-generator-template.yaml
          fi     
          
          echo "update image tag in values files"
          # IFS split the string to the array at any ';'
          IFS=';' read -ra values_files_array <<< "${{ inputs.values_files_paths }}"
          for values_file_path in ${values_files_array[@]}; do
            # If we are in merged we want to take the shortsha from the ecr, else we want to take shortsha of the commit
            if [ "${{ github.event.pull_request.merged }}" == "true"  ] ; then
              service_name=$(dirname "$values_file_path" | awk -F '/' '{print $NF}')
              short_sha=$(aws ecr list-images --repository-name $service_name | jq '.imageIds[] | select(.imageTag == "'$branch_without_slashes'") | .imageDigest' | xargs -I {} aws ecr describe-images --repository-name $service_name --image-ids imageDigest={} | jq '.imageDetails[].imageTags' | jq '.[]' | jq 'select(. != "'$branch_without_slashes'" and . != "${{ github.head_ref }}")')
            else
              short_sha=$(git rev-parse --short "$GITHUB_SHA")
            fi
            echo "values_file_path: $values_file_path"
            echo "short sha: $short_sha"
            sed -i "s,tag:.*,tag:\ $short_sha," $values_file_path
          done

          git add -A 
          git diff-index --quiet HEAD || git commit -m "Updated from ${{ github.event.repository.name }} - $branch_with_slashes"
          git push --set-upstream origin $argocd_branch_name