name: update-argocd-applicationset-merged

on:
  workflow_call:
    inputs:
      services:
        required: true
        type: string
      environment:
        required: true
        type: string
      tag:
        required: true
        type: string

permissions:
  contents: read

jobs:
  update-application-set-in-argocd:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout argocd
        uses: actions/checkout@v3
        with:
          repository: brightsource-il/argocd
          ssh-key: ${{ secrets.ARGOCD_DEPLOY_KEY }}
          ref: dev
          fetch-depth: 0

      - name: Check if service folder exists in $ENVIRONMENT
        id: check_service_folder
        env:
          SERVICES: ${{ inputs.services }}
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          services_array=$(echo "$SERVICES" | jq -r '.[]')
          readarray -t array <<< "$services_array"
          for service in ${services_array[@]}; do
            if [ ! -d "helm/$ENVIRONMENT/$service" ]; then
              if [ $ENVIRONMENT == 'dev' ]; then
                echo "Please Merge existing PR to $ENVIRONMENT branch"
                exit 1
              fi
          done

      - name: Get image tag
        env:
          SERVICES: ${{ inputs.services }}
          ENVIRONMENT: ${{ inputs.environment }}
          TAG: ${{ inputs.tag }}
        run: |
          services_array=$(echo "$SERVICES" | jq -r '.[]')
          readarray -t array <<< "$services_array"
          for service in ${services_array[@]}; do
            echo "service: $service"
            echo "tag: $TAG"
            sed -i "s,tag:.*,tag:\ $TAG," helm/dev/$service_name/values_dev.yaml
            sed -i "s,tag:.*,tag:\ $TAG," helm/dev/$service_name/values_qa.yaml
            sed -i "s,tag:.*,tag:\ $TAG," helm/dev/$service_name/values_staging.yaml
            sed -i "s,tag:.*,tag:\ $TAG," helm/dev/$service_name/values_prod.yaml
          done

      - name: Commit and push changes to argocd repo
        run: |
          echo "Commit and push changes to argocd repo"
          git config --global user.email argocd@brightsource-il.com && git config --global user.name ci-bot
          git fetch
          git add -A 
          git diff-index --quiet HEAD || git commit -m "Updated $ENVIRONMENT application set with new tag"
          git push --set-upstream origin dev
      
      

      - name: sync argocd applicationset
        env:
          ENVIRONMENT: ${{ inputs.environment }}
        run: |
          if kubectl get appset $ENVIRONMENT -n argocd  &> /dev/null; then
            echo "sync argocd applicationset"
            argocd app sync $ENVIRONMENT -n argocd
          else
            kubectl apply -f ./applicationSets/dev/apply-dev-env.yaml -n argocd
          fi
