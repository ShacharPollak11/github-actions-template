name: CD client to S3

on:
  workflow_call:
    inputs:
      context_path:
        required: true
        type: string
      args:
        type: string
      project:
        required: true
        type: string
      dest-path:
        required: false
        type: string
        default: 'NONE'
      storybook:
        required: false
        default: false
        type: boolean
      dist-path:
        required: true
        type: string
      aws_ci_region:
        type: string
        default: 'us-east-1'
      bucket_name:
        type: string
        required: false
        default: ''
      node_version:
        type: number
        default: 16
      nx:
        type: boolean
        default: true
      yarn:
        type: boolean
        default: false
jobs:

  build-and-push-to-s3:
    runs-on: ubuntu-latest
    name: Client build and upload
    permissions:
      contents: read
    env:
      NODE_OPTIONS: --max-old-space-size=16384
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Configure AWS Credentials "DEV"
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ inputs.aws_ci_region }}
      # Checking out infra repository for the S3 life cycle policy .json
      - name: Checkout infra repository
        uses: actions/checkout@v3
        with:
          ssh-key: ${{ secrets.INFRA_SSH_PRIVATE_KEY }}
          repository: brightsource-il/cloud-infrastructure
          ref: 'main'
          path: infra
      - name: "Set lock file "
        run: |
          if '${{ inputs.yarn }}'; then
            echo "lock_file=yarn.lock" >> $GITHUB_ENV
          else
            echo "lock_file=package-lock.json" >> $GITHUB_ENV
          fi
      - uses: actions/setup-node@v3
        with:
          node-version:  ${{ inputs.node_version }}
          cache: 'npm'
          cache-dependency-path: ${{ inputs.context_path }}/${{ env.lock_file }}
      - name: login codeartficat
        run: aws codeartifact login --tool npm --repository artifactory --domain brightsource --domain-owner 479886561928 --region us-east-1
      - run: npm install
        working-directory: ${{ inputs.context_path }}
      - uses: mansagroup/nrwl-nx-action@main #change to latest after they fix nx clud support of --scan arg
        if: ${{ inputs.storybook }}
        with:
          targets: build-storybook
          nxCloud: true
          workingDirectory: ${{ inputs.context_path }}
          args: ${{ inputs.args }}
          projects: ${{ inputs.project  }}
      - uses: mansagroup/nrwl-nx-action@main #change to latest after they fix nx clud support of --scan arg
        if: inputs.nx && !inputs.storybook
        with:
          targets: build
          nxCloud: true
          workingDirectory: ${{ inputs.context_path }}
          args: ${{ inputs.args }}
          projects: ${{ inputs.project  }}

      - name: NG build
        if:  inputs.nx == false
        working-directory: ${{ inputs.context_path }}
        run: npx ng build
      - name: "Set bucket name "
        run: |
          if [ '${{ inputs.bucket_name }}' != '' ]; then
            echo "bucket_name=${{ inputs.bucket_name }}" >> $GITHUB_ENV
          else
            echo "bucket_name=s3-client-dev-${{ inputs.aws_ci_region }}-${{ inputs.project}}" >> $GITHUB_ENV
          fi
      - name: "Set dest dir "
        run: |
          if [ '${{ inputs.dest-path }}' != 'NONE' ]; then
            echo "dest_path=${{ inputs.dest-path }}" >> $GITHUB_ENV
          else
            echo "dest_path=${{ inputs.project }}" >> $GITHUB_ENV
          fi

      # This step publishes the client artifact to an S3 bucket if triggered by "push" event, it checks if the bucket exists and creates it if not and attaches a lifecycle policy.
      # If triggered by the "dev" branch, the artkfact will be uploaded to "dev" folder, otherwise to "temp" folder.
      # - name: Publish client artifact to S3 bucket #TODO: add push to artifactory
      #- name: Create S3 Bucket
       # run: |
        #      aws s3api get-bucket-versioning --bucket s3-client-dev-${{ inputs.aws_ci_region }}-${{ inputs.project}} 1>/dev/null || \
         #     aws s3api create-bucket --acl private --bucket s3-client-dev-${{ inputs.aws_ci_region }}-${{ inputs.project}} && \
          #    aws s3api put-bucket-versioning --bucket s3-client-dev-${{ inputs.aws_ci_region }}-${{ inputs.project}} --versioning-configuration Status=Enabled && \
           #   aws s3api put-bucket-lifecycle-configuration --bucket s3-client-dev-${{ inputs.aws_ci_region }}-${{ inputs.project}} \
            #  --lifecycle-configuration  file://./infra/.github/templates/client-lifecycle-policy.json

      - uses:  jakejarvis/s3-sync-action@master
        if: ${{ inputs.bucket_name }} == ''
        name: Upload S3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          AWS_S3_BUCKET: ${{ env.bucket_name }}
          SOURCE_DIR: ${{ inputs.context_path }}/${{ inputs.dist-path}}
          DEST_DIR: ${{ env.dest_path }}
          AWS_REGION: ${{ inputs.aws_ci_region}}
