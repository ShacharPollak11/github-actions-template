name: 'CD'

on:
  workflow_call:
    inputs:
      env: 
        required: true
        type: string
        default: dev
      account:
        required: true
        type: string
      region:
        required: true
        type: string
      branch:
        required: true
        type: string


permissions:
  contents: read

env:
  cluster_name:  eks-${{ inputs.env }}-${{ inputs.region }}
  bucket_name: s3-charts-dev-us-east-1


jobs:
  # env-check:
  #   name: Environment check
  #   runs-on: ubuntu-latest
  #   outputs:
  #       github-env: ${{ steps.check-env.outputs.env }}
  #   steps:
  #     - name: Check if not personal env
  #       id: check-env
  #       run: |
  #            if [ ${{ inputs.env }} != "dev" ] && [ ${{ inputs.env }} != "qa" ] && [ ${{ inputs.env }} != "staging" ] && [ ${{ inputs.env }} != "prod" ]
  #            then
  #              echo "::set-output name=env::dev"
  #            else
  #              echo "::set-output name=env::${{ inputs.env }}"
  #            fi

  cd:
    name: Deployment
    runs-on: ubuntu-latest
    environment: ${{ inputs.account }}
    # needs: env-check
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    steps:
      - name: Download Helm chart
        run: |
             buildId=$(aws s3api list-objects --bucket ${{ env.bucket_name }} \
             | jq -e '[.Contents[] | select(.Key|test("${{ inputs.branch }}.zip")).Key | split("-") | .[0]] | max' | sed 's/"//g')

             aws s3api get-object --bucket ${{ env.bucket_name }} \
             --key "${buildId}-${{ inputs.branch }}.zip" \
             "chart.zip"

             unzip chart.zip

      - name: Update kube config
        run: aws eks --region ${{ inputs.region }} update-kubeconfig --name ${{ env.cluster_name }}
             
      - name: Deploy helm chart
        run: |
             helm upgrade bse-${{ inputs.env }} helm/umbrella \
             --namespace ${{ inputs.env }}
             --install \
             --atomic \
             --create-namespace \
             --dependency-update \
             --wait \
             -f helm/umbrella/${{ inputs.env }}_values.yaml \
             -f helm/umbrella/versions.yaml

      - name: Deploy client
        run: |
             id=$(curl \
             -H "Accept: application/vnd.github+json" \
             -H "Authorization: Bearer ${{ github.token }}" \
             https://api.github.com/repos/brightsource-il/aws-poc/actions/artifacts \
             | jq -e '[.artifacts[] | select(.name|test("client")) | .id ] | max')




 # [.Contents[] | select(.Key|test("-develop.zip")).Key | split("-") | .[0]] | max
