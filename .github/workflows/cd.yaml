name: 'CD'

on:
  workflow_call:
    inputs:
      env: 
        required: true
        type: string
        default: dev
      account:
        required: true
        type: string
      region:
        required: true
        type: string
      branch:
        required: true
        type: string
      default_bucket_region:
        type: string
        default: 'us-east-1'


permissions:
  contents: read

env:
  cluster_name:  eks-${{ inputs.env }}-${{ inputs.region }}
  charts_bucket: s3-charts-dev-us-east-1
  client_bucket: s3-client-dev-us-east-1


jobs:
  # env-check:
  #   name: Environment check
  #   runs-on: ubuntu-latest
  #   outputs:
  #       github-env: ${{ steps.check-env.outputs.env }}
  #   steps:
  #     - name: Check if not personal env
  #       id: check-env
  #       run: |
  #            if [ ${{ inputs.env }} != "dev" ] && [ ${{ inputs.env }} != "qa" ] && [ ${{ inputs.env }} != "staging" ] && [ ${{ inputs.env }} != "prod" ]
  #            then
  #              echo "::set-output name=env::dev"
  #            else
  #              echo "::set-output name=env::${{ inputs.env }}"
  #            fi

  cd:
    name: Deployment
    runs-on: ubuntu-latest
    environment: ${{ inputs.account }}
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ inputs.default_bucket_region }}
    steps:
      - name: Download Helm chart
        run: |
             set -Eeuo pipefail
             function getKey() {
               aws s3api list-objects --bucket $1 | \
               jq -e --arg branch $2 \
               '. as $parent | [.Contents[].Key | split("/")[1] | select(test($branch+".zip")) | split("-")[0] | tonumber] 
               | max | tostring | . as $buildId |
               $parent.Contents[].Key | select(test($buildId+"-"))' | sed 's/"//g'
             }

             key=$(getKey ${{ env.charts_bucket }} ${{ inputs.branch }})

             aws s3api get-object --bucket ${{ env.charts_bucket }} \
             --key $key chart.zip

             unzip chart.zip

      - name: Update kube config
        run: aws eks --region ${{ inputs.region }} update-kubeconfig --name ${{ env.cluster_name }}
             
      - name: Deploy helm chart
        run: |
             helm upgrade bse-${{ inputs.env }} helm/umbrella \
             --namespace ${{ inputs.env }}
             --install \
             --atomic \
             --create-namespace \
             --dependency-update \
             --wait \
             -f helm/umbrella/${{ inputs.env }}_values.yaml \
             -f helm/umbrella/versions.yaml

      - name: Download client
        run: |
             set -Eeuo pipefail
             function getKey() {
               aws s3api list-objects --bucket $1 | \
               jq -e --arg branch $2 \
               '. as $parent | [.Contents[].Key | split("/")[1] | select(test($branch+".zip")) | split("-")[0] | tonumber] 
               | max | tostring | . as $buildId |
               $parent.Contents[].Key | select(test($buildId+"-"))' | sed 's/"//g'
             }

             key=$(getKey ${{ env.charts_bucket }} ${{ inputs.branch }} || getKey ${{ env.charts_bucket }} dev)

             aws s3api get-object --bucket ${{ env.client_bucket }} \
             --key $key client.zip

      # - name: Deploy client
      #   run: |
      #        aws s3api put-object \
      #           --acl private \
      #           --bucket s3-client-dev-${{ secrets.AWS_CI_REGION }} \
      #           --body ${{ github.run_number }}-${{ steps.branch_name.outputs.branch_name }}.zip \
      #           --key dev/${{ github.run_number }}-${{ steps.branch_name.outputs.branch_name }}.zip




