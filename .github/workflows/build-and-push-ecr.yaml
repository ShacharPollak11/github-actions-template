name: CI service

on:
  workflow_call:
    inputs:
      dockerfile_path:
        required: true
        type: string
      service_name:
        required: true
        type: string
      context_path:
        required: true
        type: string
      aws_ci_region:
        type: string
        default: "us-east-1"
      aws_ci_account:
        type: string
        default: "479886561928"
      ecr_registry:
        type: string
        default: "479886561928.dkr.ecr.us-east-1.amazonaws.com"
    outputs:
      run_id: 
        description: "The run id of the build-push-ecr job"
        value: ${{ jobs.build-push-ecr.outputs.run_id }}

permissions:
  contents: read
  
env:
  repository: dkr.ecr.${{ inputs.aws_ci_region }}.amazonaws.com/${{ inputs.service_name }}
  
jobs:
  build-push-ecr:
    runs-on: ubuntu-latest
    name: Service build and push to AWS ECR
    outputs:
      run_id: ${{ steps.output_run_id.outputs.run_id }}
    steps:
      - name: List environment variables
        run: env

      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ inputs.aws_ci_region }}

      - name: Repository check/creation
        run: |
          aws ecr describe-repositories --repository-names ${{ inputs.service_name }} \
          || aws ecr create-repository --repository-name ${{ inputs.service_name }}

      - name: Lifecycle policy check/creation
        run: |
          # aws ecr get-lifecycle-policy --repository-name ${{ inputs.service_name }} || \
          curl https://raw.githubusercontent.com/brightsource-il/github-actions-template/main/.github/templates/ecr-policy.json >> ecr-policy.json
          aws ecr put-lifecycle-policy --repository-name ${{ inputs.service_name }} \
          --lifecycle-policy-text file://ecr-policy.json #'${{ steps.default_ecr_policy.outputs.policy }}'

      - name: Multi account permission policy set
        run: |
          curl https://raw.githubusercontent.com/brightsource-il/github-actions-template/main/.github/templates/ecr-multi-account.json >> ecr-multi-account.json
          aws ecr set-repository-policy \
            --repository-name ${{ inputs.service_name }} \
            --policy-text file://ecr-multi-account.json
            
      - name: Login to ECR
        uses: docker/login-action@v2.0.0
        with:
          registry: ${{ inputs.ecr_registry }}/${{ inputs.service_name }}
          username: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          password: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          ecr: true
          logout: true

      - name: Replace branch name bad chars
        id: branch_name
        run: |
          if [ ${{ github.event_name }} == "pull_request" ]; then
            name=$( echo '${{ github.head_ref }}' | tr '/' '-' )
            echo "branch_name=$name" >> $GITHUB_OUTPUT
          else
            name=$( echo '${{ github.ref_name }}' | tr '/' '-' )
            echo "branch_name=$name" >> $GITHUB_OUTPUT
          fi

      - name: Calc Short SHA
        id: short_sha 
        run: |
            short_sha=$(git rev-parse --short "$GITHUB_SHA")
            echo "short_sha=$short_sha" >> $GITHUB_OUTPUT
            
      - name: Docker build and push
        uses: docker/build-push-action@v4
        with:
          context: ${{ inputs.context_path }}
          push: true
          tags: 
                ${{ inputs.aws_ci_account }}.${{ env.repository }}:${{ steps.short_sha.outputs.short_sha }},
                ${{ inputs.aws_ci_account }}.${{ env.repository }}:${{ steps.branch_name.outputs.branch_name }},
                ${{ inputs.aws_ci_account }}.${{ env.repository }}:${{ github.run_id }}
          file: ${{ inputs.dockerfile_path }} 
          build-args: |
            "BSII_NUGET_URL=${{ secrets.BSII_NUGET_URL }}"
            "BSII_NUGET_USER=${{ secrets.BSII_NUGET_USER }}"
            "BSII_NUGET_PASSWORD=${{ secrets.BSII_NUGET_PASSWORD }}"
            "AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID_DEV }}"
            "AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}"
            "AWS_DEFAULT_REGION=${{ inputs.aws_ci_region }}"

      - name: Output run id
        id: output_run_id
        run: echo "run_id=${{ github.run_id }}" >> "$GITHUB_OUTPUT"

      - name: Retag ${{ inputs.service_name }} as dev
        if: ${{ github.event.name == 'push' }}
        uses: abronin/ecr-retag-action@v1.6.0
        with:
          repository: ${{ inputs.service_name }}
          tag: ${{ github.head_ref }}
          new-tags: ${{ github.ref_name }}
