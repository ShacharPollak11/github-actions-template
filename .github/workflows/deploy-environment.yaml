on:
  workflow_call:
    inputs:
      source:
        required: true
        type: string
      destination:
        required: true
        type: string
      services:
        required: true
        type: string

permissions:
  contents: read

env:
  aws_region: us-east-1

jobs:
  deploy-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_DEV }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_DEV }}
          aws-region: ${{ env.aws_region }}

      - name: Checkout argocd
        uses: actions/checkout@v3
        with:
          repository: brightsource-il/argocd
          ssh-key: ${{ secrets.ARGOCD_DEPLOY_KEY }}
          ref: dev
          fetch-depth: 0

      - name: Check if service folder exists in $DESTINATION
        id: check_service_folder
        if: ${{ inputs.destination }} != 'dev'
        env:
          SERVICES: ${{ inputs.services }}
          DESTINATION: ${{ inputs.destination }}
        run: |
          services_array=$(echo "$SERVICES" | jq -r '.[]')
          readarray -t array <<< "$services_array"
          for service in ${services_array[@]}; do
            if [ ! -d "helm/$DESTINATION/$service" ]; then
              echo "service is not exists in $DESTINATION folder, please create a PR and Add helm chart for $service to $DESTINATION folder"
              exit 1
            fi
          done

      - name: Get image tag dev values file and override tag in $DESTINATION
        id: tag
        if: ${{ inputs.destination }} != 'dev'
        env:
          SERVICES: ${{ inputs.services }}
          SOURCE: ${{ inputs.source }}
          DESTINATION: ${{ inputs.destination }}
        run: |
          echo "Replace values from dev folder to $DESTINATION folder"
          services_array=$(echo "$SERVICES" | jq -r '.[]')
          readarray -t array <<< "$services_array"
          if [ "$DESTINATION" != "dev" ]; then
            for service in ${services_array[@]}; do
              echo "service: $service"
              cp -f helm/$SOURCE/$service/values_$SOURCE.yaml helm/$DESTINATION/$service/values_$DESTINATION.yaml
            done      
          fi

      - name: Commit and push changes to argocd repo
        run: |
          echo "Commit and push changes to argocd repo"
          git config --global user.email argocd@brightsource-il.com && git config --global user.name ci-bot
          git fetch
          git add -A 
          git diff-index --quiet HEAD || git commit -m "Updated $DESTINATION application set with new tag"
          git push --set-upstream origin dev

      - name: Sync ArgoCD ApplicationSet
        run: |
          aws eks --region ${{ env.aws_region }} update-kubeconfig --name eks-dev-${{ env.aws_region }}
          kubectl apply -f ./applicationSets/apply-${{ inputs.destination }}-env.yaml -n argocd
