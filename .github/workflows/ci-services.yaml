run-name: CI service ${{ inputs.service_type }}

on:
  workflow_call:
    inputs:
      aws_ci_region:
        type: string
        default: "us-east-1"
      aws_ci_account:
        type: string
        default: "479886561928"
      projects_args:
        default: "[]"
        required: true
        type: string
      enable-test:
        required: false
        type: boolean
        default: true
      enable-resharper:
        required: false
        type: boolean
        default: false
      enable-ecr:
        required: false
        type: boolean
        default: true
      enable-sonarqube:
        required: false
        type: boolean
        default: true
      service_type:
        required: true
        type: string
      test-file-path:
        required: false
        type: string

    outputs:
      services:
        description: "The services to build"
        value: ${{ jobs.read-json.outputs.services }}
      run_id:
        value: ${{ jobs.ci-service-csharp.outputs.run_id }}

jobs:
  read-json:
    # runs-on: self-hosted
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - id: services
        run: |
          content=`cat ${{inputs.projects_args}}`
          echo "services<<EOF" >> $GITHUB_OUTPUT
          echo "$content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          echo $content
    outputs:
      services: ${{ steps.services.outputs.services }}

  ci-service-csharp:
    if : ${{ inputs.service_type == 'csharp' }}
    needs: read-json
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        array: ${{ fromJson(needs.read-json.outputs.services) }}
    uses: ./.github/workflows/ci-service-csharp.yaml
    secrets: inherit
    name: CI for ${{ matrix.array.service_name }}
    with:
      context_path: ${{ matrix.array.context_path }}
      solution_file: ${{ matrix.array.solution_file }}
      dockerfile_path: ${{ matrix.array.dockerfile_path }}
      service_name: ${{ matrix.array.service_name }}
      enable_api_tests: ${{ matrix.array.enable_api_tests }}
      enable-test: ${{ inputs.enable-test }}
      enable-ecr: ${{ inputs.enable-ecr }}
      enable-resharper: ${{ inputs.enable-resharper }}
      enable-sonarqube: ${{ inputs.enable-sonarqube }}

  ci-service-python:
    if : ${{ inputs.service_type == 'python' }}
    needs: read-json
    permissions:
      contents: read
    strategy:
      fail-fast: false
      matrix:
        array: ${{ fromJson(needs.read-json.outputs.services) }}
    uses: ./.github/workflows/ci-service-python.yaml
    secrets: inherit
    name: CI for ${{ matrix.array.service_name }}
    with:
      context_path: ${{ matrix.array.context_path }}
      dockerfile_path: ${{ matrix.array.dockerfile_path }}
      service_name: ${{ matrix.array.service_name }}
      enable_api_tests: ${{ matrix.array.enable_api_tests }}
      enable-test: ${{ inputs.enable-test }}
      enable-ecr: ${{ inputs.enable-ecr }}
      enable-resharper: ${{ inputs.enable-resharper }}
      enable-sonarqube: ${{ inputs.enable-sonarqube }}
      test-file-path: ${{ inputs.test-file-path }}

