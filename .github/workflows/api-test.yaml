name: Test API

on:
  workflow_call:
    inputs:
      context_path:
        required: true
        type: string
permissions:
  contents: read

jobs:
  check_csproj:
    name: check_csproj
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v3
      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq
      - name: Find all csproj
        run: |

          # define empty arrays for service names and versions
          declare -a service_names
          declare -a versions

          # loop through each .csproj file in the current directory and its subdirectories
          for file in $(find ${{ inputs.context_path }} -name "*.csproj")
          do
              # loop through each matching line in the current file
              while IFS= read -r line
              do
                  # use regex to parse the service name and version
                  if [[ $line =~ Bse\.(.*)\.Api\.Server\"\ Version=\"(.*)\" ]] ; then
                      # append to the arrays
                      service_names+=(${BASH_REMATCH[1]})
                      service_names+=" "
                      versions+=(${BASH_REMATCH[2]})
                      versions+=" "
                  fi
              done < <(grep -o '<PackageReference Include="Bse.*Api.Server" Version=".*" />' $file)
          done

          # service_names+="AuthorizationService"
          # versions+="10.0.0"

          # print the arrays
          echo "Service Names: ${service_names[@]}"
          echo "Versions: ${versions[@]}"

          # Transform the array into a JSON list of objects

          services_json="["
          for index in "${!service_names[@]}"; do
              single_service_json=$(jq -n \
                      --arg name "${service_names[index]}" \
                      --arg version "${versions[index]}" \
                      '{name: $name, version: $version}')
              services_json+="$single_service_json,"
          done
          services_json="${services_json%?}]"

          echo "service Json: $services_json"

          echo ::set-output name=services::"$services_json"

  postman_tests:
    needs: check_csproj
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: ${{fromJson(needs.check_csproj.outputs.services)}}
    steps:
      # - name: Checkout API-tests repo
      #   uses: actions/checkout@v3
      #   with:
      #     repository: brightsource-il/oases-qa # replace with your repository name
      #     path: ./API-tests
      #     ref: 'API-tests/AuthorizationService/1.0.0'
      #     token: ""
      - uses: actions/checkout@v3

      # - name: Run Postman tests
      #   uses: matt-ball/newman-action@master
      #   with:
      #     collection: ./API-tests/${{ matrix.service.name }}/1.0.0/${{ matrix.service.name }}.postman_collection.json
      #     environment: ./API-tests/${{ matrix.service.name }}/1.0.0/${{ matrix.service.name }}.postman_environment.json

      - name: Run Postman tests
        uses: matt-ball/newman-action@master
        with:
          collection: ./AuthorizationService.postman_environment.json
          environment: ./Bse.AuthService.postman_collection.json
